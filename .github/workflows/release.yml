name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Inspect repo
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "--- cmd dir ---"; ls -la cmd || true
          echo "--- tree (maxdepth 3) ---"; find . -maxdepth 3 -type d | sort

      - name: Build
        env:
          CGO_ENABLED: '0'
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          OUT="dist/blt_${{ matrix.goos }}_${{ matrix.goarch }}${EXT}"
          if [ -d "cmd/blt" ]; then PKG="./cmd/blt"; elif [ -f main.go ]; then PKG="."; else echo "Unable to locate cmd/blt or main.go" >&2; exit 1; fi
          echo "Building ${OUT} from package ${PKG} (pwd=$(pwd))"
          go build -trimpath -ldflags "-s -w" -o "$OUT" "$PKG"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: blt-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Generate SHA256 checksums
        run: |
          cd dist
          shopt -s nullglob
          echo "Generating SHA256SUMS.txt"
          rm -f SHA256SUMS.txt
          for f in *; do
            if [ -f "$f" ]; then
              sha256sum "$f" >> SHA256SUMS.txt
            fi
          done
          cat SHA256SUMS.txt

      - name: Build release notes from CHANGELOG
        id: notes
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "Tag: $TAG"
          NOTES_FILE="dist/release_notes.md"
          if [ -f CHANGELOG.md ]; then
            # Extract section for the current tag between matching header and next header
            awk -v tag="$TAG" '
              $0 ~ "^## \\["tag"\\]" { p=1; next }
              p && /^## \[/ { p=0 }
              p { print }
            ' CHANGELOG.md > "$NOTES_FILE"
          fi
          # Fallback if empty
          if [ ! -s "$NOTES_FILE" ]; then
            echo "Release $TAG" > "$NOTES_FILE"
            echo >> "$NOTES_FILE"
            echo "Automated release for $TAG." >> "$NOTES_FILE"
          fi
          echo "notes_file=$NOTES_FILE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          body_path: ${{ steps.notes.outputs.notes_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
